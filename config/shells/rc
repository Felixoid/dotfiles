#!/bin/bash
# PATH
# Append our default paths
_appendpath () {
    case ":$PATH:" in
        *:"$1":*)
            ;;
        *)
            PATH="${PATH:+$PATH:}$1"
            export PATH
    esac
}

_appendpath "${HOME}/bin"
## ruby
## Modern ruby is installed to ~/.local/share/gem/ruby. but the old one to ~/.gem/ruby
for RUBY_DIR in "$HOME/.gem/ruby" "$HOME/.local/share/gem/ruby"; do
  if [ -d "${RUBY_DIR}" ] && [ -n "$(ls "${RUBY_DIR}/"*"/bin" 2>/dev/null)" ]; then
    for dir in "${RUBY_DIR}/"*"/bin"; do
      _appendpath "${dir}"
    done
  fi
done

# added by travis gem
[ -f /home/felixoid/.travis/travis.sh ] && source /home/felixoid/.travis/travis.sh

# GO
for gp in $HOME/OPT/go $HOME/Space/go; do
  if [ -d $gp ]; then
    export GOPATH="$gp"
    break
  fi
done
_appendpath "${GOPATH}/bin"

# EDITOR
export EDITOR=vim
export VISUAL=vim

# QT theme
export QT_QPA_PLATFORMTHEME=qt5ct

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
  if [ -r ~/.dircolors ]
    then eval "$(/usr/bin/dircolors -b ~/.dircolors)"
    else eval "$(/usr/bin/dircolors -b)"
  fi
  alias ls='ls --color=auto'

  alias grep='grep --color=auto'
  alias fgrep='fgrep --color=auto'
  alias egrep='egrep --color=auto'
fi

SOURCE_DIR="$(dirname "$0")"
[ -f "${SOURCE_DIR}"/aliases ] && source "${SOURCE_DIR}"/aliases

# SSH ask pass with GUI
for ASKPASS in /usr/lib/seahorse/ssh-askpass \
    /usr/bin/lxqt-openssh-askpass \
    /usr/bin/qt4-ssh-askpass \
    /usr/lib/ssh/x11-ssh-askpass
do
  if [ -x $ASKPASS ]; then
    export SSH_ASKPASS=$ASKPASS
    break
  fi
done

# password generator
genpasswd() {
  local l=$1
  [[ "$l" == "" ]] && l=16
  tr -dc 'A-Za-z0-9_!@#$%^&*()' < /dev/urandom | head -c ${l} | xargs
}

# work rcs
if [ -r "$HOME/.config/workrc/" ] \
    && [ -n "$(ls "$HOME/.config/workrc/"*.sh)" ]; then
  for src in "$HOME/.config/workrc/"*.sh; do
    [ -r "$src" ] && . "$src"
  done
fi

# cd to the root of the current git directory
# If $PWD is submodule, will cd to the root of the top ancestor
# It requires to stay in the current directory, if the root is . or unknown,
# and use cd only once, to have a way to do `cd -`
cg() {
  _cg() {
    local top; top="$(git rev-parse --show-cdup)"
    top="${top:-./}"
    local super_root; super_root="$(git rev-parse --show-superproject-working-tree)"
    if [[ "$super_root" ]]; then
      printf '%s' "$top../"
      ( cd "$top../" && _cg || return )
    fi
    printf '%s' "$top"
  }
  local git_root
  git_root="$(_cg)"
  [[ "x${git_root}" != "x./" ]] && cd "${git_root}" && return || return 0
}

# docker build cont
dobuild() {
  docker run -w "$(pwd)" --network=host -e GPG_TTY="$GPG_TTY" -e SSH_AUTH_SOCK="$SSH_AUTH_SOCK" -v "$SSH_AUTH_SOCK":"$SSH_AUTH_SOCK" -e HOME:"$HOME" -v /home:/home -u "$UID":"$GID" -v /etc/passwd:/etc/passwd -v "$(pwd):$(pwd)" --rm -it debuild:"${REL:-stretch}" "$@"
}
dorun() {
  docker run -w "$(pwd)" --network=host -e GPG_TTY="$GPG_TTY" -e SSH_AUTH_SOCK="$SSH_AUTH_SOCK" -v "$SSH_AUTH_SOCK":"$SSH_AUTH_SOCK" -e HOME:"$HOME" -v /home:/home -u "$UID":"$GID" -v /etc/passwd:/etc/passwd -v "$(pwd):$(pwd)" --rm -it "$@"
}

# qt5 scaling problem with i.e. zeal
export QT_AUTO_SCREEN_SCALE_FACTOR=0

# less pipe
export LESS_ADVANCED_PREPROCESSOR=1

# keychain, only if SSH_* undefined
if [ -x /usr/bin/keychain ] && [ ! -S "${SSH_AUTH_SOCK:-/x}" ]; then
  # I want to avoid DNS requests, that's why `uname -n` is used
  eval "$(/usr/bin/keychain --host "$(uname -n 2>/dev/null || echo unknown)" --eval --systemd --timeout 720 --inherit any-once -Q -q --agents gpg,ssh )"
fi
unlock-rsa() {
  if [ -x /usr/bin/keychain ]; then
    /usr/bin/keychain --timeout 59 -q "${HOME}"/.ssh/*_rsa
  fi
}

# I use keepassxc to manage ssh keys, so don't invoke unlock-rsa automatically
#unlock-rsa
