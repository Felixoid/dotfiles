zstyle :compinstall filename "${HOME}/.zshrc"
zstyle ':completion:*' completer _complete _ignored _approximate
zstyle ':completion:*' max-errors 1
zstyle ':completion:*' menu select

# I don't want to see error `zsh: no matches found: remote.host:file.*` on `rsync` invoking
unsetopt NOMATCH

# allow comments in interactive
setopt interactivecomments

############################## Prompting ##############################
# Vim modes lag
export KEYTIMEOUT=1

#Prompts
function prompt_char {
    git branch >/dev/null 2>&1 && echo '±' && return
    svn info >/dev/null 2>&1 && echo 'ƨ' && return
    hg root >/dev/null 2>&1 && echo '☿' && return
    echo 'ѳ'
}

if [ -f /usr/lib/zsh-git-prompt/zshrc.sh ]
  then source /usr/lib/zsh-git-prompt/zshrc.sh
    _GIT_PROMPT_ENABLED=true
  else _GIT_PROMPT_ENABLED=false
fi

function zle-line-init zle-keymap-select {
    # I want to avoid black color, that's why '% 7 + 1'
    USER_FG=$(( $( printf $USER | cksum | cut -d\  -f1 ) / 13 % 7 + 1))
    HOST_FG=$(( $( hostname | cksum | cut -d\  -f1 ) / 13 % 7 + 1))
    $_GIT_PROMPT_ENABLED && local GIT_SUPER_STATUS="$(git_super_status)"
    case $KEYMAP in
      viins|main) local VI="%F{2}%(!.#.>)$(prompt_char)>%f" ;;
      vicmd)      local VI="%F{3}<$(prompt_char)%(!.#.<)%f" ;;
    esac
    case $VIRTUAL_ENV in
      "") local VENV="";;
      *)  local VENV="($(basename $VIRTUAL_ENV)) " ;;
    esac
    export PS1="%(?..%F{1})[%D{%H:%M:%S}]%f %(!.%F{1}%B%n@%m%b%f.%F{$USER_FG}%n%f@%F{$HOST_FG}%m%f):%~/ ${GIT_SUPER_STATUS}"$'\n'"${VENV}${VI} "
    RPROMPT="%(?..%F{1}[e:%?]%f)"
    zle reset-prompt
    # this line fixes the issue with errasing last line in vim mode by Alt+A or Alt+I
    zle -R
}
zle -N zle-line-init
zle -N zle-keymap-select

#################### Prompting end ####################

# unlock ssh rsa keys
unlock-rsa() {/usr/bin/keychain --timeout 59 "${HOME}"/.ssh/*_rsa -q}
zle -N unlock-rsa

autoload -Uz compinit
compinit

bindkey -v
bindkey -M viins '\e.' insert-last-word
bindkey "^W" backward-kill-word
bindkey '^K' unlock-rsa
bindkey "^[[A" history-beginning-search-backward
bindkey "^[OA" history-beginning-search-backward
bindkey "^[[B" history-beginning-search-forward
bindkey "^[OB" history-beginning-search-forward

#experiment
case ${TERM} in
  xterm*)
    precmd () {print -Pn "\e]0;%5~\a"}
    ;;
esac

# Include bash profile by default
emulate sh -c 'source /etc/profile'

# autocompletion
_SERVERADMIN_HOSTS_ZSTYLE=true

[ -f ${HOME}/.config/shells/rc ] && . ${HOME}/.config/shells/rc
# work rcs
if [ -r "$HOME/.config/workrc/" ] \
    && [ -n "$(ls "$HOME/.config/workrc/")" ]; then
  for src in "$HOME/.config/workrc/"*.zsh(N); do
    [ -r "$src" ] && . "$src"
  done
fi
